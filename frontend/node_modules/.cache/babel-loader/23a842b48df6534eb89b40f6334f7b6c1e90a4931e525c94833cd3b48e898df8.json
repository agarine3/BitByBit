{"ast":null,"code":"var _jsxFileName = \"/Users/amitgarine/Developer/BitByBit/frontend/src/components/Calendar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, Paper, Typography, Box, List, ListItem, ListItemText, Divider } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/tasks');\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const groupTasksByDate = () => {\n    const grouped = {};\n    tasks.forEach(task => {\n      const date = new Date(task.date).toLocaleDateString();\n      if (!grouped[date]) {\n        grouped[date] = [];\n      }\n      grouped[date].push(task);\n    });\n    return grouped;\n  };\n  const groupedTasks = groupTasksByDate();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      mt: 4\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Your Study Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), Object.entries(groupedTasks).map(([date, dateTasks]) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            mb: 2\n          },\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: dateTasks.map((task, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: task.title,\n                secondary: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), index < dateTasks.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 52\n            }, this)]\n          }, task._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","Container","Paper","Typography","Box","List","ListItem","ListItemText","Divider","axios","jsxDEV","_jsxDEV","Calendar","_s","tasks","setTasks","fetchTasks","response","get","data","error","console","groupTasksByDate","grouped","forEach","task","date","Date","toLocaleDateString","push","groupedTasks","maxWidth","sx","mt","children","elevation","p","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","map","dateTasks","mb","index","Fragment","primary","title","secondary","description","length","_id","_c","$RefreshReg$"],"sources":["/Users/amitgarine/Developer/BitByBit/frontend/src/components/Calendar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Paper,\n  Typography,\n  Box,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n} from '@mui/material';\nimport axios from 'axios';\n\ninterface Task {\n  _id: string;\n  title: string;\n  description: string;\n  date: string;\n  completed: boolean;\n}\n\nconst Calendar: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/api/tasks');\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n\n    fetchTasks();\n  }, []);\n\n  const groupTasksByDate = () => {\n    const grouped: { [key: string]: Task[] } = {};\n    tasks.forEach(task => {\n      const date = new Date(task.date).toLocaleDateString();\n      if (!grouped[date]) {\n        grouped[date] = [];\n      }\n      grouped[date].push(task);\n    });\n    return grouped;\n  };\n\n  const groupedTasks = groupTasksByDate();\n\n  return (\n    <Container maxWidth=\"md\" sx={{ mt: 4 }}>\n      <Paper elevation={3} sx={{ p: 4 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Your Study Schedule\n        </Typography>\n        {Object.entries(groupedTasks).map(([date, dateTasks]) => (\n          <Box key={date} sx={{ mb: 4 }}>\n            <Typography variant=\"h6\" sx={{ mb: 2 }}>\n              {date}\n            </Typography>\n            <List>\n              {dateTasks.map((task, index) => (\n                <React.Fragment key={task._id}>\n                  <ListItem>\n                    <ListItemText\n                      primary={task.title}\n                      secondary={task.description}\n                    />\n                  </ListItem>\n                  {index < dateTasks.length - 1 && <Divider />}\n                </React.Fragment>\n              ))}\n            </List>\n          </Box>\n        ))}\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Calendar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}